version: "3.7"
services:
  dev-server:
    container_name: dev-server
    image: nginx:alpine
    volumes:
      - ../:/application
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - ${NGINX_PORT}:80

  php:
    container_name: php
    build:
      context: .
      dockerfile: ./php/Dockerfile
    volumes:
      - ../:/application
    user: ${USER_ID}:${GROUP_ID}
    links:
      - mysql

  node:
    container_name: node
    image: node:latest
    user: ${USER_ID}:${GROUP_ID}
    working_dir: /home/node/app
    volumes:
      - ../:/home/node/app
    command: ["yarn", "dev-server"]
    ports:
      - ${NODE_TCP_PORT}:${NODE_TCP_PORT}

  mysql:
    container_name: mysql
    image: mysql:5.7
    command: --sql_mode="NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=Europe/Paris
      - MYSQL_TCP_PORT=${DATABASE_PORT}
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - ${PHPMYADMIN_PORT}:80
    depends_on:
      - mysql
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=${DATABASE_PORT}


  wait-mysql:
    container_name: wait-mysql
    image: martin/wait
    command: -c mysql:${DATABASE_PORT}
    depends_on:
      - mysql

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:latest
    ports:
      - ${MAILHOG_PORT}:8025